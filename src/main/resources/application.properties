spring.application.name=turisteando
spring.config.import=optional:env.properties

logging.level.org.springframework.security=DEBUG


server.port=${PORT}
## Configuration Database
spring.datasource.driver-class-name= ${DB_DRIVER}
spring.datasource.url= ${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.${DB_DIALECT}

## Configuracion de JPA MySQL
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.globally_quoted_identifiers=true

api.version=1.0.0

## Configuracion enviroment
spring.profiles.active=dev

spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true

# CLOUDINARY
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-key=${CLOUDINARY_API_KEY}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}

## JWT
jwt.secret=${JWT_SECRET_KEY}
jwt.expiration=${JWT_EXPIRATION}

### EMAIL ###
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USER}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

FRONTEND_URLS =${FRONTEND_URLS}


# OAuth2 Google Configuration
spring.security.oauth2.client.registration.google.client-id=${clientID}
spring.security.oauth2.client.registration.google.client-secret=${Secret}
spring.security.oauth2.client.registration.google.scope=openid, profile, email
# spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
# spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
# spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
# spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
# spring.security.oauth2.client.provider.google.user-name-attribute=sub